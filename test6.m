dimension = 2;
GG = XGraph(dimension);  % this one is for the maze

% highest difficulty
% assign some vertices and edges
vertices = [0 0; 1 0; 4 0; 8 0; 12 0;
            1 1; 2 1; 3 1; 4 1; 5 1; 7 1; 8 1; 11 1;
            0 2; 2 2; 3 2; 5 2; 6 2; 7 2; 8 2; 11 2;
            1 3; 3 3; 4 3; 6 3; 8 3; 9 3; 10 3; 12 3;
            1 4; 2 4; 3 4; 4 4; 5 4; 6 4; 7 4; 8 4; 10 4; 11 4;
            0 5; 2 5; 3 5; 5 5; 6 5; 8 5; 10 5; 11 5; 12 5;
            1 6; 2 6; 3 6; 4 6; 7 6; 8 6; 9 6; 11 6;
            2 7; 4 7; 5 7; 7 7; 9 7; 10 7; 11 7;
            0 8; 1 8; 2 8; 3 8; 4 8; 5 8; 6 8; 8 8; 9 8; 10 8; 12 8;
            1 9; 3 9; 4 9; 6 9; 7 9; 9 9; 10 9;
            1 10; 2 10; 3 10; 6 10; 7 10; 8 10; 9 10; 10 10; 11 10;
            0 11; 1 11; 3 11; 5 11; 7 11; 8 11; 9 11; 10 11;
            0 12; 2 12; 5 12; 6 12; 9 12; 11 12; 12 12
];
edges = [   1 2; 1 14; 2 6; 2 3; 3 9; 3 4; 4 12; 4 5; 5 29;
            7 15; 7 8; 8 16; 10 17; 10 11; 11 19; 12 13;
            14 15; 14 40; 16 23; 16 17; 18 25; 20 26; 20 21;
            22 30; 22 23; 23 32; 24 33; 24 25; 25 35; 25 26; 27 55; 28 38; 28 29; 29 48;
            31 32; 32 42; 34 43; 35 36; 36 53; 36 37; 37 45; 39 47;
            40 41; 40 64; 41 50; 42 43; 43 59; 43 44; 46 47; 47 48; 48 74;
            49 65; 50 57; 50 51; 52 58; 53 54; 53 60; 55 61; 55 56; 56 63; 
            57 58; 59 69; 59 60; 60 61; 61 72; 62 63; 
            64 65; 64 91; 65 66; 67 76; 68 69; 68 77; 70 78; 70 71; 73 74; 73 81; 74 105;
            75 82; 75 76; 76 84; 77 78; 79 80; 79 86; 81 89;
            83 100; 84 93; 84 85; 85 102; 85 86; 87 96; 88 89; 89 98; 90 104; 
            91 92; 91 99; 93 94; 95 96; 96 97; 97 103; 99 100; 100 101; 102 103; 103 104; 104 105;];
starting_edge = [101, 102];
ending_edge = [44, 53];
for i = 1:size(vertices, 1)
    GG.add_node(vertices(i,:));
end
for i = 1:size(edges, 1)
    GG.add_edge(edges(i,1), edges(i,2));
end        
% add the starting and ending edges as the last two ones 
GG.add_edge(starting_edge(1), starting_edge(2));
GG.add_edge(ending_edge(1), ending_edge(2));
GG.set_exit(GG.ne);

% start the test
sr = swarm_robot(20, [5.5, 11.5]);
therobot = -1;
iter = 0;
while(therobot == -1 && iter <= 1000)
    iter = iter + 1;
    disp(iter);
    tic
    therobot = sr.Move(GG);
    toc
end
if therobot ~= -1
    disp(therobot);
    sr.complete = 1;
end
